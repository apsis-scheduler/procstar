name: Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Type of release'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        cache: true

    - uses: PyO3/maturin-action@v1
      with:
        command: build
        sccache: true
        args: --release

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
        enable-cache: true

    - name: Bump version
      id: bump
      run: |
        git config --global user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
        git config --global user.name "$(gh api /users/${GITHUB_ACTOR} | jq .name -r)"
        git config -l

        echo "previous-version=$(uvx bump-my-version show current_version)" | tee -a $GITHUB_OUTPUT

        uvx bump-my-version bump --allow-dirty ${{ inputs.bump-type }}

        ([[ $? -gt 0 ]] && echo "bumped=false" || echo "bumped=true") | tee -a $GITHUB_OUTPUT
        echo "current-version=$(uvx bump-my-version show current_version)" | tee -a $GITHUB_OUTPUT
        echo "git-tag=v$(uvx bump-my-version show current_version)" | tee -a $GITHUB_OUTPUT
      env:
        GH_TOKEN: ${{ github.token }}

    - name: Push bumped version
      if: steps.bump.outputs.bumped == 'true'
      run: |
        target_ref=${{ github.head_ref && format('refs/heads/{0}', github.head_ref) || github.ref }}
        git push origin HEAD:${{ github.ref }}
        git push origin ${{ steps.bump.outputs.git-tag }}

    - name: Create Github release
      if: steps.bump.outputs.bumped == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.bump.outputs.git-tag }}
        name: ${{ steps.bump.outputs.git-tag }}
        files: |
          target/wheels/*.whl
        draft: false
        prerelease: false
        generate_release_notes: true
